{"version":3,"file":"validate-DZZjg1ZS.js","sources":["../../../../assets/js/validate.js"],"sourcesContent":["import { format } from 'date-fns';\r\nimport Tour_constants from '~/assets/js/constants/constants';\r\nfunction isArrayEmpty(arr) {\r\n    var errors = []\r\n    // Check if the input is an array\r\n    if (!Array.isArray(arr)) {\r\n        errors.push('Input is not an array.');\r\n    }\r\n    // Check if the array length is zero\r\n    return arr.length === 0;\r\n}\r\n\r\n/**\r\n * Handle yyyy-MM-dd format dates\r\n * @param {*} date\r\n */\r\nfunction formatDateYYYYmmdd(date) {\r\n    if (typeof date !== 'string') {\r\n        return 'Invalid Date';\r\n    }\r\n    const dateObj = new Date(date);\r\n    if (isNaN(dateObj.getTime())) {\r\n        return 'Invalid Date';\r\n    }\r\n    return format(dateObj, 'yyyy-MM-dd');\r\n};\r\nfunction formatDate(date) {\r\n    const parsedDate = new Date(date);\r\n    if (isNaN(parsedDate)) {\r\n        return 'Invalid Date'; // Or any other fallback message\r\n    }\r\n    return format(parsedDate, 'dd-MM-yyyy');\r\n};\r\nfunction formatDate2(isoString) {\r\n    const dateObject = new Date(isoString);\r\n    const weekdays = [\r\n        'Chủ Nhật',\r\n        'Thứ Hai',\r\n        'Thứ Ba',\r\n        'Thứ Tư',\r\n        'Thứ Năm',\r\n        'Thứ Sáu',\r\n        'Thứ Bảy',\r\n    ];\r\n    const weekdayStr = weekdays[dateObject.getDay()];\r\n\r\n    const formattedDate = `${weekdayStr}, ngày ${dateObject.getDate()} tháng ${dateObject.getMonth() + 1} năm ${dateObject.getFullYear()}`;\r\n\r\n    return formattedDate;\r\n};\r\n// Tạo một hàm để định dạng số tiền\r\nfunction formatCurrency(value) {\r\n    if (value == null) {\r\n        return 'Chưa xác định';\r\n    }\r\n    if (value === 0) {\r\n        return '0';\r\n    }\r\n    return Intl.NumberFormat('vi-VN', {\r\n        style: 'currency',\r\n        currency: 'VND',\r\n    }).format(value);\r\n}\r\nfunction addTwoHoursAndFormat(datePay) {\r\n    var date = new Date(datePay);\r\n    date.setHours(date.getHours() + 2); // Thêm 2 giờ\r\n\r\n    var hours = date.getHours().toString().padStart(2, '0');\r\n    var minutes = date.getMinutes().toString().padStart(2, '0');\r\n    var day = date.getDate().toString().padStart(2, '0');\r\n    var month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    var year = date.getFullYear();\r\n    var formattedDateTime = `${hours}:${minutes} ${day}/${month}/${year}`;\r\n    return formattedDateTime;\r\n};\r\nfunction addOneDay(datePay) {\r\n    var date = new Date(datePay);\r\n    date.setDate(date.getDate() + 1);\r\n    var hours = date.getHours().toString().padStart(2, '0');\r\n    var minutes = date.getMinutes().toString().padStart(2, '0');\r\n    var day = date.getDate().toString().padStart(2, '0');\r\n    var month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    var year = date.getFullYear();\r\n    var formattedDateTime = `${hours}:${minutes} ${day}/${month}/${year}`;\r\n    return formattedDateTime;\r\n}\r\nfunction paymentDeadline(paymentBy, paymentTime) {\r\n    return paymentBy === Tour_constants.Cash ? addOneDay(paymentTime) : addTwoHoursAndFormat(paymentTime);\r\n}\r\nfunction formatDatePayment(datePay) {\r\n    var date = new Date(datePay);\r\n\r\n    var hours = date.getHours().toString().padStart(2, '0');\r\n    var minutes = date.getMinutes().toString().padStart(2, '0');\r\n    var day = date.getDate().toString().padStart(2, '0');\r\n    var month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n\r\n    var year = date.getFullYear();\r\n    var formattedDateTime = `${hours}:${minutes} ${day}/${month}/${year}`;\r\n    return formattedDateTime;\r\n};\r\nfunction maskPhoneNumber(phoneNumber) {\r\n    if (!phoneNumber || phoneNumber.length < 6) {\r\n        return phoneNumber;\r\n    }\r\n    var start = phoneNumber.slice(0, 3);\r\n    var end = phoneNumber.slice(-3);\r\n    var masked = start + '***' + end;\r\n    return masked;\r\n};\r\nexport { isArrayEmpty, formatDateYYYYmmdd, formatCurrency, formatDate, formatDate2, addTwoHoursAndFormat, addOneDay, paymentDeadline, formatDatePayment, maskPhoneNumber }\r\n"],"names":[],"mappings":";AA0BA,SAAS,WAAW,MAAM;AACtB,QAAM,aAAa,IAAI,KAAK,IAAI;AAChC,MAAI,MAAM,UAAU,GAAG;AACnB,WAAO;AAAA,EACV;AACD,SAAO,OAAO,YAAY,YAAY;AAC1C;AACA,SAAS,YAAY,WAAW;AAC5B,QAAM,aAAa,IAAI,KAAK,SAAS;AACrC,QAAM,WAAW;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACR;AACI,QAAM,aAAa,SAAS,WAAW,OAAQ,CAAA;AAE/C,QAAM,gBAAgB,GAAG,UAAU,UAAU,WAAW,SAAS,UAAU,WAAW,SAAU,IAAG,CAAC,QAAQ,WAAW,YAAa,CAAA;AAEpI,SAAO;AACX;AAEA,SAAS,eAAe,OAAO;AAC3B,MAAI,SAAS,MAAM;AACf,WAAO;AAAA,EACV;AACD,MAAI,UAAU,GAAG;AACb,WAAO;AAAA,EACV;AACD,SAAO,KAAK,aAAa,SAAS;AAAA,IAC9B,OAAO;AAAA,IACP,UAAU;AAAA,EAClB,CAAK,EAAE,OAAO,KAAK;AACnB;"}