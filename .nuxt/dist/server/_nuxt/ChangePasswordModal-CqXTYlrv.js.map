{"version":3,"file":"ChangePasswordModal-CqXTYlrv.js","sources":["../../../../components/form/ChangePasswordModal.vue"],"sourcesContent":["<template>\r\n    <CVModal id_model=\"changePasswordModal\" @close-modal=\"resetForm\">\r\n      <template #icon>\r\n        <slot name=\"icon\"></slot>\r\n      </template>\r\n      <template #title>\r\n        <slot name=\"header\">Đổi mật khẩu</slot>\r\n      </template>\r\n      <template #body>\r\n        <form @submit.prevent=\"handleSubmit\">\r\n          <div v-if=\"!isAdminChangeMode\" class=\"row mb-3 form-group required\">\r\n            <label for=\"old-pass\" class=\"col-sm-3 col-form-label control-label text-end\">\r\n              Mật khẩu hiện tại\r\n            </label>\r\n            <div class=\"col-sm-9\">\r\n              <input\r\n                type=\"password\"\r\n                v-model=\"currentPassword\"\r\n                @blur=\"validateOldPassword\"\r\n                class=\"form-control\"\r\n              />\r\n              <span v-if=\"errors.currentPassword\" class=\"error-message text-danger\">\r\n                {{ errors.currentPassword }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row mb-3 form-group required\">\r\n            <label for=\"new-pass\" class=\"col-sm-3 col-form-label control-label text-end\">Mật khẩu mới</label>\r\n            <div class=\"col-sm-9\">\r\n              <input\r\n                type=\"password\"\r\n                v-model=\"newPassword\"\r\n                @blur=\"validatePassword\"\r\n                @input=\"validatePassword\"\r\n                class=\"form-control\"\r\n              />\r\n              <span v-if=\"errors.newPassword\" class=\"error-message text-danger\">\r\n                {{ errors.newPassword }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row mb-3 form-group required\">\r\n            <label for=\"cf-pass\" class=\"col-sm-3 col-form-label control-label text-end\">\r\n              Xác nhận mật khẩu\r\n            </label>\r\n            <div class=\"col-sm-9\">\r\n              <input\r\n                type=\"password\"\r\n                v-model=\"confirmPassword\"\r\n                @blur=\"validateConfirmPassword\"\r\n                @input=\"validateConfirmPassword\"\r\n                class=\"form-control\"\r\n              />\r\n              <span v-if=\"errors.confirmPassword\" class=\"error-message text-danger\">\r\n                {{ errors.confirmPassword }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer d-flex justify-content-center\">\r\n            <button type=\"submit\" class=\"btn btn-warning d-flex align-items-center\">\r\n              Lưu\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </template>\r\n    </CVModal>\r\n  </template>\r\n  \r\n  <!-- <script>\r\n  import { ref, defineComponent } from 'vue';\r\n  import Api from '~/service/Base/api';\r\n  \r\n  const api = new Api();\r\n  \r\n  export default defineComponent({\r\n    name: 'ChangePasswordModal',\r\n    props: {\r\n      accountId: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n      isAdminChangeMode: {\r\n        type: Boolean,\r\n        required: false,\r\n        default: false,\r\n      },\r\n    },\r\n    setup(props) {\r\n      // Khai báo các biến reactive cho form và lỗi\r\n      const currentPassword = ref('');\r\n      const newPassword = ref('');\r\n      const confirmPassword = ref('');\r\n      const errors = ref({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      });\r\n  \r\n      // Hàm kiểm tra mật khẩu cũ\r\n      const validateOldPassword = () => {\r\n        if (!props.isAdminChangeMode && currentPassword.value.trim().length === 0) {\r\n          errors.value.currentPassword = 'Mật khẩu hiện tại không được để trống.';\r\n        } else {\r\n          errors.value.currentPassword = '';\r\n        }\r\n      };\r\n  \r\n      // Hàm kiểm tra mật khẩu mới\r\n      const validatePassword = () => {\r\n        if (newPassword.value.trim().length === 0) {\r\n          errors.value.newPassword = 'Mật khẩu mới không được để trống.';\r\n          return false;\r\n        }\r\n        if (newPassword.value === currentPassword.value) {\r\n          errors.value.newPassword = 'Mật khẩu mới không được trùng với mật khẩu hiện tại.';\r\n          return false;\r\n        } else if (newPassword.value.length < 5) {\r\n          errors.value.newPassword = 'Mật khẩu mới phải chứa ít nhất 5 ký tự.';\r\n          return false;\r\n        }\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{5,}$/;\r\n        if (!passwordRegex.test(newPassword.value)) {\r\n          errors.value.newPassword = 'Mật khẩu phải có ít nhất 5 ký tự gồm chữ hoa, chữ thường và số';\r\n          return false;\r\n        }\r\n  \r\n        errors.value.newPassword = ''; // Xóa thông báo lỗi nếu mật khẩu hợp lệ\r\n        return true;\r\n      };\r\n  \r\n      // Hàm kiểm tra mật khẩu xác nhận\r\n      const validateConfirmPassword = () => {\r\n        if (confirmPassword.value.trim().length === 0) {\r\n          errors.value.confirmPassword = 'Xác nhận mật khẩu không được để trống.';\r\n          return false;\r\n        }\r\n        if (newPassword.value !== confirmPassword.value) {\r\n          errors.value.confirmPassword = 'Xác nhận mật khẩu không khớp với mật khẩu mới.';\r\n          return false;\r\n        }\r\n        errors.value.confirmPassword = '';\r\n        return true;\r\n      };\r\n  \r\n      // Hàm kiểm tra tất cả các input\r\n      const validateInputs = () => {\r\n        validateOldPassword();\r\n        validatePassword();\r\n        validateConfirmPassword();\r\n  \r\n        return (\r\n          !errors.value.currentPassword &&\r\n          !errors.value.newPassword &&\r\n          !errors.value.confirmPassword\r\n        );\r\n      };\r\n  \r\n      // Hàm xử lý khi gửi form\r\n      const handleSubmit = () => {\r\n        if (validateInputs()) {\r\n          if (!props.isAdminChangeMode) {\r\n            const data = {\r\n              accountId: props.accountId,\r\n              oldPassword: currentPassword.value,\r\n              newPassword: newPassword.value,\r\n            };\r\n            api.putAPI('/Account/changePassword', data)\r\n              .then((response) => {\r\n                if (response.status === 200) {\r\n                  localStorage.removeItem('token');\r\n                  navigateTo('/Login');\r\n                  $('#changePasswordModal').modal('hide');\r\n                  $('.btn-close').click();\r\n                  currentPassword.value = '';\r\n                  newPassword.value = '';\r\n                  confirmPassword.value = '';\r\n                } else {\r\n                  errors.value.currentPassword = response.data.Message || 'Mật khẩu hiện tại không chính xác.';\r\n                }\r\n              });\r\n          } else {\r\n            const editPasswordData = {\r\n                  Id: props.accountId,          // Thêm accountId từ props\r\n                  Password: newPassword.value,  // Mật khẩu mới\r\n                };\r\n            api.putAPI('/Account/editPassword', editPasswordData)\r\n              .then((response) => {\r\n                $('#changePasswordModal').modal('hide');\r\n                $('.btn-close').click();\r\n                newPassword.value = '';\r\n                confirmPassword.value = '';\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          }\r\n        }\r\n      };\r\n        // Hàm reset form khi đóng modal hoặc khi thành công\r\n      const resetForm = () => {\r\n        currentPassword.value = '';\r\n        newPassword.value = '';\r\n        confirmPassword.value = '';\r\n        errors.value.currentPassword = '';\r\n        errors.value.newPassword = '';\r\n        errors.value.confirmPassword = '';\r\n      };\r\n      // Trả các biến và hàm ra template\r\n      return {\r\n        currentPassword,\r\n        newPassword,\r\n        confirmPassword,\r\n        errors,\r\n        validateOldPassword,\r\n        validatePassword,\r\n        validateConfirmPassword,\r\n        handleSubmit,\r\n      };\r\n    },\r\n  });\r\n  </script>\r\n   -->\r\n   <script setup>\r\n   import { ref } from 'vue';\r\n   import Api from '~/service/Base/api';\r\n   import { useToast } from 'vue-toast-notification';\r\n   const toast = useToast();\r\n   // Tạo instance của API\r\n   const api = new Api();\r\n   \r\n   // Props\r\n   const props = defineProps({\r\n     accountId: {\r\n       type: String,\r\n       required: true,\r\n     },\r\n     isAdminChangeMode: {\r\n       type: Boolean,\r\n       default: false,\r\n     },\r\n   });\r\n   \r\n   // Reactive variables\r\n   const currentPassword = ref('');\r\n   const newPassword = ref('');\r\n   const confirmPassword = ref('');\r\n   const errors = ref({\r\n     currentPassword: '',\r\n     newPassword: '',\r\n     confirmPassword: '',\r\n   });\r\n   \r\n   // Hàm kiểm tra mật khẩu cũ\r\n   const validateOldPassword = () => {\r\n     if (!props.isAdminChangeMode && currentPassword.value.trim().length === 0) {\r\n       errors.value.currentPassword = 'Mật khẩu hiện tại không được để trống.';\r\n     } else {\r\n       errors.value.currentPassword = '';\r\n     }\r\n   };\r\n   \r\n   // Hàm kiểm tra mật khẩu mới\r\n   const validatePassword = () => {\r\n     if (newPassword.value.trim().length === 0) {\r\n       errors.value.newPassword = 'Mật khẩu mới không được để trống.';\r\n       return false;\r\n     }\r\n     if (newPassword.value === currentPassword.value) {\r\n       errors.value.newPassword = 'Mật khẩu mới không được trùng với mật khẩu hiện tại.';\r\n       return false;\r\n     } else if (newPassword.value.length < 5) {\r\n       errors.value.newPassword = 'Mật khẩu mới phải chứa ít nhất 5 ký tự.';\r\n       return false;\r\n     }\r\n     const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{5,}$/;\r\n     if (!passwordRegex.test(newPassword.value)) {\r\n       errors.value.newPassword = 'Mật khẩu phải có ít nhất 5 ký tự gồm chữ hoa, chữ thường và số';\r\n       return false;\r\n     }\r\n   \r\n     errors.value.newPassword = ''; // Xóa thông báo lỗi nếu mật khẩu hợp lệ\r\n     return true;\r\n   };\r\n   \r\n   // Hàm kiểm tra mật khẩu xác nhận\r\n   const validateConfirmPassword = () => {\r\n     if (confirmPassword.value.trim().length === 0) {\r\n       errors.value.confirmPassword = 'Xác nhận mật khẩu không được để trống.';\r\n       return false;\r\n     }\r\n     if (newPassword.value !== confirmPassword.value) {\r\n       errors.value.confirmPassword = 'Xác nhận mật khẩu không khớp với mật khẩu mới.';\r\n       return false;\r\n     }\r\n     errors.value.confirmPassword = '';\r\n     return true;\r\n   };\r\n   \r\n   // Hàm kiểm tra tất cả các input\r\n   const validateInputs = () => {\r\n     validateOldPassword();\r\n     validatePassword();\r\n     validateConfirmPassword();\r\n   \r\n     return (\r\n       !errors.value.currentPassword &&\r\n       !errors.value.newPassword &&\r\n       !errors.value.confirmPassword\r\n     );\r\n   };\r\n   \r\n   // Hàm xử lý khi gửi form\r\n   const handleSubmit = () => {\r\n     if (validateInputs()) {\r\n       if (!props.isAdminChangeMode) {\r\n         const data = {\r\n           accountId: props.accountId,\r\n           oldPassword: currentPassword.value,\r\n           newPassword: newPassword.value,\r\n         };\r\n         api.putAPI('/Account/changePassword', data)\r\n           .then((response) => {\r\n             if (response.status === 200) {\r\n               toast.success('Đổi mật khẩu thành công');\r\n               localStorage.removeItem('token');\r\n               navigateTo('/Login');\r\n               $('#changePasswordModal').modal('hide');\r\n               $('.btn-close').click();\r\n               resetForm();\r\n             } else {\r\n               errors.value.currentPassword = response.data.Message || 'Mật khẩu hiện tại không chính xác.';\r\n             }\r\n           });\r\n       } else {\r\n         const editPasswordData = {\r\n           Id: props.accountId,          // Thêm accountId từ props\r\n           Password: newPassword.value,  // Mật khẩu mới\r\n         };\r\n         api.putAPI('/Account/editPassword', editPasswordData)\r\n           .then((response) => {\r\n            if (response.status === 200) {\r\n              toast.success('Đổi mật khẩu thành công');\r\n             $('#changePasswordModal').modal('hide');\r\n             $('.btn-close').click();\r\n            }\r\n          })\r\n           .catch((err) => {\r\n             console.log(err);\r\n           });\r\n           resetForm();\r\n       }\r\n     }\r\n   };\r\n   \r\n   // Hàm reset form khi đóng modal hoặc khi thành công\r\n   const resetForm = () => {\r\n     currentPassword.value = '';\r\n     newPassword.value = '';\r\n     confirmPassword.value = '';\r\n     errors.value.currentPassword = '';\r\n     errors.value.newPassword = '';\r\n     errors.value.confirmPassword = '';\r\n   };\r\n   \r\n   </script>\r\n   "],"names":[],"mappings":"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"}