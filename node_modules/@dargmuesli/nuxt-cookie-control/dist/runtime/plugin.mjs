import { ref } from "vue";
import { COOKIE_ID_SEPARATOR } from "./constants.mjs";
import { getAllCookieIdsString } from "./methods.mjs";
import { defineNuxtPlugin, useCookie } from "#imports";
import moduleOptions from "#build/cookie-control-options";
const plugin = defineNuxtPlugin((_nuxtApp) => {
  const cookieIsConsentGiven = useCookie(
    moduleOptions.cookieNameIsConsentGiven,
    moduleOptions.cookieOptions
  );
  const cookieCookiesEnabledIds = useCookie(
    moduleOptions.cookieNameCookiesEnabledIds,
    moduleOptions.cookieOptions
  ).value?.split(COOKIE_ID_SEPARATOR);
  const isConsentGiven = ref(
    cookieIsConsentGiven.value === void 0 ? void 0 : cookieIsConsentGiven.value === getAllCookieIdsString(moduleOptions)
  );
  const cookiesEnabled = ref(
    cookieCookiesEnabledIds === void 0 ? void 0 : [
      ...moduleOptions.cookies.necessary.filter(
        (cookieNecessary) => cookieCookiesEnabledIds.includes(cookieNecessary.id)
      ),
      ...moduleOptions.cookies.optional.filter(
        (cookieOptional) => cookieCookiesEnabledIds.includes(cookieOptional.id)
      )
    ]
  );
  const cookiesEnabledIds = ref(cookieCookiesEnabledIds);
  const isModalActive = ref();
  const locale = ref();
  const state = {
    cookiesEnabled,
    cookiesEnabledIds,
    isConsentGiven,
    isModalActive,
    locale,
    moduleOptions
  };
  return {
    provide: {
      cookies: state
    }
  };
});
export default plugin;
