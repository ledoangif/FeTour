import { defineNuxtModule, createResolver, addComponentsDir, addComponent, addTemplate, addTypeTemplate } from '@nuxt/kit';
import { readFile } from 'fs/promises';

const module = defineNuxtModule({
  meta: {
    name: "nuxt-bootstrap-icons",
    configKey: "bootstrapIcons",
    compatibility: {
      nuxt: "^3.0.0"
    }
  },
  // Default configuration options of the Nuxt module
  defaults: {
    display: "inline",
    expose: false,
    prefix: "bootstrap-icon",
    showList: false
  },
  async setup(options) {
    const { resolve } = createResolver(import.meta.url);
    const paths = {
      components: resolve("./runtime/components"),
      iconList: resolve("./runtime/bootstrap-icons.list.json"),
      templates: resolve("./runtime/templates")
    };
    let _prefix;
    if (options.prefix.includes("-"))
      _prefix = options.prefix.split("-").map((word) => word.at(0)?.toUpperCase() + word.slice(1)).join("");
    else
      _prefix = options.prefix.at(0)?.toUpperCase() + options.prefix.slice(1);
    if (options.display === "component")
      await addComponentsDir({
        global: options.expose,
        path: resolve(paths.components, "library"),
        prefix: _prefix
      });
    else if (options.display === "inline")
      await addComponent({
        filePath: resolve(paths.components, "BootstrapIcon.vue"),
        name: _prefix
      });
    const iconList = JSON.parse(
      (await readFile(paths.iconList)).toString()
    );
    if (options.showList) {
      if (options.display === "component") {
        const _icons = iconList.map(
          (icon) => icon.split("-").map((word) => word.at(0)?.toUpperCase() + word.slice(1)).join("")
        );
        addTemplate({
          filename: "nuxt-bootstrap-icons.json",
          getContents: () => JSON.stringify(_icons),
          write: true
        });
      } else
        addTemplate({
          filename: "nuxt-bootstrap-icons.json",
          getContents: () => JSON.stringify(iconList),
          write: true
        });
    }
    addTypeTemplate({
      filename: "types/nuxt-bootstrap-icons.d.ts",
      src: resolve(paths.templates, "_types.d.ts")
    });
  }
});

export { module as default };
